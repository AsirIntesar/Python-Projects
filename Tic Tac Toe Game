#game board
board = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-"]


#is the game going?
game_still_going = True  


#what is the result?
winner = None

#Whos turn is it?
current_player = "X"


def display_board():
  print("|" + board[0] + "|" + board[1] + "|" + board[2] + "|")
  print("|" + board[3] + "|" + board[4] + "|" + board[5] + "|")
  print("|" + board[6] + "|" + board[7] + "|" + board[8] + "|")


def play_game():

  display_board()

  #while the game is still going
  while game_still_going:

   #handle the single turn of an arbitary player  
   handle_turn(current_player)

   #check the game condition
   check_if_game_over()

   #flip the turn to other player
   flip_player()

  #when game ended
  if winner == "X" or winner == "O":
    print("Winner is :" + winner)
  elif winner == None:
    print("Tie")


#handle the single turn of an arbitary player    
def handle_turn(player):
  print (player + " 's turn")
  position = input("Choose a position among 1-9:  ")
  valid = False
  while not valid:
    while position not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]:
      position = input("invalid! Please choose a position among 1-9:")

    position = int(position) - 1

    if board[position] == "-":
      valid = True
    else:  
      print ("Position already taken ")

  board[position] = player

  display_board()


def check_if_game_over():
  check_for_winner()
  check_if_tie()


def check_for_winner():
  global winner #set up the global variable
  
  row_winner = check_rows()

  column_winner = check_columns()

  diagonal_winner = check_diagonals()

  if row_winner:
    winner = row_winner
  elif column_winner:
    winner = column_winner
  elif diagonal_winner:
    winner = diagonal_winner
  else:
    winner = None      
  return

def check_rows():
  global game_still_going 
  #checking if any row has all same value and not null
  row_1= board[0] == board[1] == board[2] != "-" 
  row_2= board[3] == board[4] == board[5] != "-" 
  row_3= board[6] == board[7] == board[8] != "-" 

  if row_1 or row_2 or row_3:
    game_still_going = False

  if row_1:#checking who win o or x
    return board[0] #the value in 0 will be same as 1 & 2
  elif row_2:
    return board[3] #the value in 3 will be same as 4 & 5
  elif row_3:
    return board[6] #the value in 6 will be same as 7 & 8    
  else:
    return None

def check_columns():
  global game_still_going 
  #checking if any column has all same value and not null
  column_1= board[0] == board[3] == board[6] != "-" 
  column_2= board[1] == board[4] == board[7] != "-" 
  column_3= board[2] == board[5] == board[8] != "-" 
  
  if column_1 or column_2 or column_3:
    game_still_going = False

  if column_1:#checking who win o or x
    return board[0] #the value in 0 will be same as 3 & 6
  elif column_2:
    return board[1] #the value in 3 will be same as 4 & 7
  elif column_3:
    return board[2] #the value in 6 will be same as 5 & 8    
  else:
    return None

def check_diagonals():
  global game_still_going 
  #checking if any diagonal has all same value and not null
  diagonal_1= board[0] == board[4] == board[8] != "-" 
  diagonal_2= board[2] == board[4] == board[6] != "-"  
  
  if diagonal_1 or diagonal_2:
    game_still_going = False

  if diagonal_1:#checking who win o or x
    return board[0] #the value in 0 will be same as 3 & 6
  elif diagonal_2:
    return board[1] #the value in 3 will be same as 4 & 7
  else: 
    return None

def check_if_tie(): 
  global game_still_going
  if "-" not in board:
    game_still_going = False  
  return 

def flip_player():
  global current_player
  #flipping the current player
  if current_player == "X":
    current_player = "O"
  elif current_player == "O":
    current_player = "X"
  return
play_game()  
